{"ast":null,"code":"var _jsxFileName = \"/Users/danielfrick/Desktop/robofriends2.0/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../Components/CardList';\nimport SearchField from '../Components/SearchField';\nimport Scroll from '../Components/Scroll';\nimport './App.css';\nimport { setSearchField } from '../Actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const robots = this.state.robots;\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Loading.....\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Robofriends\"), React.createElement(SearchField, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/danielfrick/Desktop/robofriends2.0/src/Containers/App.js"],"names":["React","Component","connect","CardList","SearchField","Scroll","setSearchField","mapStateToProps","state","searchField","searchRobots","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","robots","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;AAEA,SAAQC,cAAR,QAA6B,YAA7B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD;AAD3B,GAAP;AAGD,CAJD;;AAMA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACN,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;AAGD,CAJD;;AAMA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAE1BiB,EAAAA,WAAW,GAAE;AACX;AACA,SAAKV,KAAL,GAAa;AACXW,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADjB,EAECF,IAFD,CAEMG,KAAK,IAAI;AAAE,WAAKC,QAAL,CAAc;AAACP,QAAAA,MAAM,EAAEM;AAAT,OAAd;AAAgC,KAFjD;AAGD;;AAEDE,EAAAA,MAAM,GAAE;AAAA,UACER,MADF,GACa,KAAKX,KADlB,CACEW,MADF;AAAA,wBAEkC,KAAKS,KAFvC;AAAA,UAEEnB,WAFF,eAEEA,WAFF;AAAA,UAEeI,cAFf,eAEeA,cAFf;AAGN,UAAMgB,cAAc,GAAGV,MAAM,CAACW,MAAP,CAAcC,KAAK,IAAI;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCzB,WAAW,CAACwB,WAAZ,EAAlC,CAAP;AACD,KAFsB,CAAvB;AAIE,WAAO,CAACd,MAAM,CAACgB,MAAR,GACL;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADK,GAGL;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,WAAD;AAAa,MAAA,YAAY,EAAEtB,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAGgB,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CAHF;AAUH;;AAhCyB;;AAoC5B,eAAe3B,OAAO,CAACK,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../Components/CardList';\nimport SearchField from '../Components/SearchField';\nimport Scroll from '../Components/Scroll';\nimport './App.css';\n\nimport {setSearchField} from '../Actions';\n\nconst mapStateToProps = state =>{\n  return {\n    searchField: state.searchRobots.searchField\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n}\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      robots: []\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response =>response.json())\n    .then(users => { this.setState({robots: users}) } );\n  }\n\n  render(){\n    const { robots } = this.state;\n    const { searchField, onSearchChange } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n      return !robots.length ?\n        <h1 className='tc'>Loading.....</h1> :\n\n        <div className='tc'>\n          <h1 className='f1'>Robofriends</h1>\n          <SearchField searchChange={onSearchChange}/>\n          <Scroll>\n            <CardList robots={ filteredRobots } />\n          </Scroll>\n        </div>\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}